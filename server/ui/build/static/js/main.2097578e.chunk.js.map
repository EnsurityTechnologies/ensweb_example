{"version":3,"sources":["components/Header/Header.js","constants/apiConstants.js","components/LoginForm/LoginForm.js","components/RegistrationForm/RegistrationForm.js","components/Home/Home.js","utils/PrivateRoute.js","components/AlertComponent/AlertComponent.js","App.js","serviceWorker.js","index.js"],"names":["withRouter","props","s","title","location","pathname","substring","length","charAt","toUpperCase","slice","className","onClick","localStorage","removeItem","axios","post","then","response","status","showError","catch","error","console","log","history","push","renderLogout","useState","email","password","successMessage","state","setState","handleChange","e","target","id","value","prevState","redirectToHome","updateTitle","htmlFor","type","aria-describedby","placeholder","onChange","preventDefault","payload","setItem","data","token","showSuccess","Message","style","display","role","confirmPassword","sendDetailsToServer","message","setMessage","redirectToLogin","useEffect","get","PrivateRoute","children","rest","render","getItem","to","from","AlertComponent","modalDisplay","toggleDisplay","alertType","setAlert","openModal","closeModal","hideError","hideSuccess","errorMessage","aria-label","aria-hidden","App","updateErrorMessage","updateSuccessMessage","path","exact","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2097578e.chunk.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { withRouter } from \"react-router-dom\";\nimport {API_BASE_URL, ACCESS_TOKEN_NAME} from '../../constants/apiConstants';\nfunction Header(props) {\n    const capitalize = (s) => {\n        if (typeof s !== 'string') return ''\n        return s.charAt(0).toUpperCase() + s.slice(1)\n    }\n    let title = capitalize(props.location.pathname.substring(1,props.location.pathname.length))\n    if(props.location.pathname === '/') {\n        title = 'Welcome'\n    }\n    function renderLogout() {\n        if(props.location.pathname === '/home'){\n            return(\n                <div className=\"ml-auto\">\n                    <button className=\"btn btn-danger\" onClick={() => handleLogout()}>Logout</button>\n                </div>\n            )\n        }\n    }\n    function handleLogout() {\n        localStorage.removeItem(ACCESS_TOKEN_NAME)\n\n        axios.post(API_BASE_URL+'/api/logout', null)\n            .then(function (response) {\n                if(response.status === 200){\n                }\n                else{\n                    props.showError(\"Logout error\");\n                }\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n\n\n        props.history.push('/login')\n    }\n    return(\n        <nav className=\"navbar navbar-dark bg-primary\">\n            <div className=\"row col-12 d-flex justify-content-center text-white\">\n                <span className=\"h3\">{props.title || title}</span>\n                {renderLogout()}\n            </div>\n        </nav>\n    )\n}\nexport default withRouter(Header);","export const API_BASE_URL = \"\"\n//process.env.REACT_APP_SERVER_URL;\nexport const ACCESS_TOKEN_NAME = 'login_access_token';","import React, {useState} from 'react';\nimport axios from 'axios';\nimport './LoginForm.css';\nimport {API_BASE_URL, ACCESS_TOKEN_NAME} from '../../constants/apiConstants';\nimport { withRouter } from \"react-router-dom\";\n\nfunction LoginForm(props) {\n    const [state , setState] = useState({\n        email : \"\",\n        password : \"\",\n        successMessage: null\n    })\n    const handleChange = (e) => {\n        const {id , value} = e.target   \n        setState(prevState => ({\n            ...prevState,\n            [id] : value\n        }))\n    }\n\n    const handleSubmitClick = (e) => {\n        e.preventDefault();\n        const payload={\n            \"email\":state.email,\n            \"password\":state.password,\n        }\n        axios.post(API_BASE_URL+'/api/login', payload)\n            .then(function (response) {\n                if(response.status === 200){\n                    setState(prevState => ({\n                        ...prevState,\n                        'successMessage' : 'Login successful. Redirecting to home page..'\n                    }))\n                    localStorage.setItem(ACCESS_TOKEN_NAME,response.data.token);\n                    redirectToHome();\n                    props.showSuccess('Login successful')\n                    props.showError(null)\n                }\n                else {\n                    props.showError(response.data.Message)\n                }\n            })\n            .catch(function (error) {\n                props.showError(error.response.data.Message)\n                console.log(error);\n            });\n    }\n    const redirectToHome = () => {\n        props.updateTitle('Home')\n        props.history.push('/home');\n    }\n    const redirectToRegister = () => {\n        props.history.push('/register'); \n        props.updateTitle('Register');\n    }\n    return(\n        <div className=\"card col-12 col-lg-4 login-card mt-2 hv-center\">\n            <form>\n                <div className=\"form-group text-left\">\n                <label htmlFor=\"exampleInputEmail1\">Email address</label>\n                <input type=\"email\" \n                       className=\"form-control\" \n                       id=\"email\" \n                       aria-describedby=\"emailHelp\" \n                       placeholder=\"Enter email\" \n                       value={state.email}\n                       onChange={handleChange}\n                />\n                <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n                </div>\n                <div className=\"form-group text-left\">\n                <label htmlFor=\"exampleInputPassword1\">Password</label>\n                <input type=\"password\" \n                       className=\"form-control\" \n                       id=\"password\" \n                       placeholder=\"Password\"\n                       value={state.password}\n                       onChange={handleChange} \n                />\n                </div>\n                <div className=\"form-check\">\n                </div>\n                <button \n                    type=\"submit\" \n                    className=\"btn btn-primary\"\n                    onClick={handleSubmitClick}\n                >Submit</button>\n            </form>\n            <div className=\"alert alert-success mt-2\" style={{display: state.successMessage ? 'block' : 'none' }} role=\"alert\">\n                {state.successMessage}\n            </div>\n            <div className=\"registerMessage\">\n                <span>Dont have an account? </span>\n                <span className=\"loginText\" onClick={() => redirectToRegister()}>Register</span> \n            </div>\n        </div>\n    )\n}\n\nexport default withRouter(LoginForm);","import React, {useState} from 'react';\nimport axios from 'axios';\nimport './RegistrationForm.css';\nimport {API_BASE_URL, ACCESS_TOKEN_NAME} from '../../constants/apiConstants';\nimport { withRouter } from \"react-router-dom\";\n\nfunction RegistrationForm(props) {\n    const [state , setState] = useState({\n        email : \"\",\n        password : \"\",\n        confirmPassword: \"\",\n        successMessage: null\n    })\n    const handleChange = (e) => {\n        const {id , value} = e.target   \n        setState(prevState => ({\n            ...prevState,\n            [id] : value\n        }))\n    }\n    const sendDetailsToServer = () => {\n        if(state.email.length && state.password.length) {\n            props.showError(null);\n            const payload={\n                \"email\":state.email,\n                \"password\":state.password,\n            }\n            axios.post(API_BASE_URL+'/api/register', payload)\n                .then(response => {\n                    if(response.status === 200){\n                        setState(prevState => ({\n                            ...prevState,\n                            'successMessage' : 'Registration successful. Redirecting to home page..'\n                        }))\n                        localStorage.setItem(ACCESS_TOKEN_NAME,response.data.token);\n                        redirectToHome();\n                        props.showError(null)\n                    } else if(response.status === 400){\n                        props.showError(response.data.Message);\n                    } else {\n                        props.showError(response.data.Message);\n                    }\n                })\n                .catch(function (error) {\n                    props.showError(error.response.data.Message);\n                    console.log(error);\n                });    \n        } else {\n            props.showError('Please enter valid username and password')    \n        }\n        \n    }\n    const redirectToHome = () => {\n        props.updateTitle('Home')\n        props.history.push('/home');\n    }\n    const redirectToLogin = () => {\n        props.updateTitle('Login')\n        props.history.push('/login'); \n    }\n    const handleSubmitClick = (e) => {\n        e.preventDefault();\n        if(state.password === state.confirmPassword) {\n            sendDetailsToServer()    \n        } else {\n            props.showError('Passwords do not match');\n        }\n    }\n    return(\n        <div className=\"card col-12 col-lg-4 login-card mt-2 hv-center\">\n            <form>\n                <div className=\"form-group text-left\">\n                <label htmlFor=\"exampleInputEmail1\">Email address</label>\n                <input type=\"email\" \n                       className=\"form-control\" \n                       id=\"email\" \n                       aria-describedby=\"emailHelp\" \n                       placeholder=\"Enter email\" \n                       value={state.email}\n                       onChange={handleChange}\n                />\n                <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n                </div>\n                <div className=\"form-group text-left\">\n                    <label htmlFor=\"exampleInputPassword1\">Password</label>\n                    <input type=\"password\" \n                        className=\"form-control\" \n                        id=\"password\" \n                        placeholder=\"Password\"\n                        value={state.password}\n                        onChange={handleChange} \n                    />\n                </div>\n                <div className=\"form-group text-left\">\n                    <label htmlFor=\"exampleInputPassword1\">Confirm Password</label>\n                    <input type=\"password\" \n                        className=\"form-control\" \n                        id=\"confirmPassword\" \n                        placeholder=\"Confirm Password\"\n                        value={state.confirmPassword}\n                        onChange={handleChange} \n                    />\n                </div>\n                <button \n                    type=\"submit\" \n                    className=\"btn btn-primary\"\n                    onClick={handleSubmitClick}\n                >\n                    Register\n                </button>\n            </form>\n            <div className=\"alert alert-success mt-2\" style={{display: state.successMessage ? 'block' : 'none' }} role=\"alert\">\n                {state.successMessage}\n            </div>\n            <div className=\"mt-2\">\n                <span>Already have an account? </span>\n                <span className=\"loginText\" onClick={() => redirectToLogin()}>Login here</span> \n            </div>\n            \n        </div>\n    )\n}\n\nexport default withRouter(RegistrationForm);","import React,{ useEffect } from 'react';\nimport {useState} from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { ACCESS_TOKEN_NAME, API_BASE_URL } from '../../constants/apiConstants';\nimport axios from 'axios'\nfunction Home(props) {\n  const [message, setMessage] = useState('');\n   useEffect(() => {\n        axios.get(API_BASE_URL+'/api/home')\n        .then(function (response) {\n            if(response.status !== 200){\n              redirectToLogin()\n            }\n            console.log(response.data)\n            setMessage(response.data.message)\n        })\n        .catch(function (error) {\n          props.showError(error.response.data.Message)\n          redirectToLogin()\n        });\n      })\n    function redirectToLogin() {\n    props.history.push('/login');\n    }\n    return(\n        <div className=\"mt-2\">\n            User Logged in : {message}\n        </div>\n    )\n}\n\nexport default withRouter(Home);","import React from 'react';\nimport { Redirect, Route } from \"react-router-dom\";\nimport { ACCESS_TOKEN_NAME } from '../constants/apiConstants';\nfunction PrivateRoute({ children, ...rest }) {\n    return (\n      <Route\n        {...rest}\n        render={({ location }) =>\n          localStorage.getItem(ACCESS_TOKEN_NAME) ? (\n            children\n          ) : (\n            <Redirect\n              to={{\n                pathname: \"/login\",\n                state: { from: location }\n              }}\n            />\n          )\n        }\n      />\n    );\n  }\n\nexport default PrivateRoute;","import React, { useState, useEffect } from 'react';\nimport './AlertComponent.css';\nfunction AlertComponent(props) {\n    const [modalDisplay, toggleDisplay] = useState('none');\n    const [alertType, setAlert] = useState('alert-danger');\n    const [message, setMessage] = useState(null);\n    const openModal = () => {\n        toggleDisplay('block');     \n    }\n    const closeModal = () => {\n        toggleDisplay('none'); \n        props.hideError(null);\n        props.hideSuccess(null);\n    }\n    useEffect(() => {\n        if(props.errorMessage !== null) {\n            setAlert('alert-danger')\n            setMessage(props.errorMessage)\n            openModal()\n        } else if (props.successMessage !== null){\n            setAlert('alert-success')\n            setMessage(props.successMessage)\n            openModal()\n        } else {\n            closeModal()\n        }\n    });\n    \n    return(\n        <div \n            className= {\"alert \" + alertType + \" alert-dismissable mt-4\"}\n            role=\"alert\" \n            id=\"alertPopUp\"\n            style={{ display: modalDisplay }}\n        >\n            <div className=\"d-flex alertMessage\">\n                <span>{message}</span>\n                <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={() => closeModal()}>\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            \n        </div>\n    )\n} \n\nexport default AlertComponent","import React, {useState} from 'react';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport LoginForm from './components/LoginForm/LoginForm';\nimport RegistrationForm from './components/RegistrationForm/RegistrationForm';\nimport Home from './components/Home/Home';\nimport PrivateRoute from './utils/PrivateRoute';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport AlertComponent from './components/AlertComponent/AlertComponent';  \nfunction App() {\n  const [title, updateTitle] = useState(null);\n  const [errorMessage, updateErrorMessage] = useState(null);\n  const [successMessage, updateSuccessMessage] = useState(null);\n  return (\n    <Router>\n    <div className=\"App\">\n      <Header title={title}/>\n        <div className=\"container d-flex align-items-center flex-column\">\n          <Switch>\n            <Route path=\"/\" exact={true}>\n              <RegistrationForm showError={updateErrorMessage} showSuccess={updateSuccessMessage} updateTitle={updateTitle}/>\n            </Route>\n            <Route path=\"/register\">\n              <RegistrationForm showError={updateErrorMessage} showSuccess={updateSuccessMessage} updateTitle={updateTitle}/>\n            </Route>\n            <Route path=\"/login\">\n              <LoginForm showError={updateErrorMessage} showSuccess={updateSuccessMessage} updateTitle={updateTitle}/>\n            </Route>\n            <PrivateRoute path=\"/home\">\n              <Home showError={updateErrorMessage} showSuccess={updateSuccessMessage} />\n            </PrivateRoute>\n          </Switch>\n          <AlertComponent errorMessage={errorMessage} successMessage={successMessage} hideError={updateErrorMessage} hideSuccess={updateSuccessMessage}/>\n        </div>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  //<React.StrictMode>\n    <App />,\n // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}